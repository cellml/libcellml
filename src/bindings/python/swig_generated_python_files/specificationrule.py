# This file was automatically generated by SWIG (http://www.swig.org).
# Version 4.0.0
#
# Do not make changes to this file unless you know what you are doing--modify
# the SWIG interface file instead.

from sys import version_info as _swig_python_version_info
if _swig_python_version_info < (2, 7, 0):
    raise RuntimeError('Python 2.7 or later required')

# Import the low-level C/C++ module
if __package__ or '.' in __name__:
    from . import _specificationrule
else:
    import _specificationrule

try:
    import builtins as __builtin__
except ImportError:
    import __builtin__

def _swig_setattr_nondynamic(self, class_type, name, value, static=1):
    if name == "thisown":
        return self.this.own(value)
    if name == "this":
        if type(value).__name__ == 'SwigPyObject':
            self.__dict__[name] = value
            return
    method = class_type.__swig_setmethods__.get(name, None)
    if method:
        return method(self, value)
    if not static:
        object.__setattr__(self, name, value)
    else:
        raise AttributeError("You cannot add attributes to %s" % self)


def _swig_setattr(self, class_type, name, value):
    return _swig_setattr_nondynamic(self, class_type, name, value, 0)


def _swig_getattr(self, class_type, name):
    if name == "thisown":
        return self.this.own()
    method = class_type.__swig_getmethods__.get(name, None)
    if method:
        return method(self)
    raise AttributeError("'%s' object has no attribute '%s'" % (class_type.__name__, name))


def _swig_repr(self):
    try:
        strthis = "proxy of " + self.this.__repr__()
    except __builtin__.Exception:
        strthis = ""
    return "<%s.%s; %s >" % (self.__class__.__module__, self.__class__.__name__, strthis,)


def _swig_setattr_nondynamic_instance_variable(set):
    def set_instance_attr(self, name, value):
        if name == "thisown":
            self.this.own(value)
        elif name == "this":
            set(self, name, value)
        elif hasattr(self, name) and isinstance(getattr(type(self), name), property):
            set(self, name, value)
        else:
            raise AttributeError("You cannot add instance attributes to %s" % self)
    return set_instance_attr


def _swig_setattr_nondynamic_class_variable(set):
    def set_class_attr(cls, name, value):
        if hasattr(cls, name) and not isinstance(getattr(cls, name), property):
            set(cls, name, value)
        else:
            raise AttributeError("You cannot add class attributes to %s" % cls)
    return set_class_attr


def _swig_add_metaclass(metaclass):
    """Class decorator for adding a metaclass to a SWIG wrapped class - a slimmed down version of six.add_metaclass"""
    def wrapper(cls):
        return metaclass(cls.__name__, cls.__bases__, cls.__dict__.copy())
    return wrapper


class _SwigNonDynamicMeta(type):
    """Meta class to enforce nondynamic attributes (no new attributes) for a class"""
    __setattr__ = _swig_setattr_nondynamic_class_variable(type.__setattr__)


SpecificationRule_UNDEFINED = _specificationrule.SpecificationRule_UNDEFINED
SpecificationRule_DATA_REPR_IDENTIFIER_UNICODE = _specificationrule.SpecificationRule_DATA_REPR_IDENTIFIER_UNICODE
SpecificationRule_DATA_REPR_IDENTIFIER_LATIN_ALPHANUM = _specificationrule.SpecificationRule_DATA_REPR_IDENTIFIER_LATIN_ALPHANUM
SpecificationRule_DATA_REPR_IDENTIFIER_AT_LEAST_ONE_ALPHANUM = _specificationrule.SpecificationRule_DATA_REPR_IDENTIFIER_AT_LEAST_ONE_ALPHANUM
SpecificationRule_DATA_REPR_IDENTIFIER_BEGIN_EURO_NUM = _specificationrule.SpecificationRule_DATA_REPR_IDENTIFIER_BEGIN_EURO_NUM
SpecificationRule_DATA_REPR_IDENTIFIER_IDENTICAL = _specificationrule.SpecificationRule_DATA_REPR_IDENTIFIER_IDENTICAL
SpecificationRule_DATA_REPR_NNEG_INT_BASE10 = _specificationrule.SpecificationRule_DATA_REPR_NNEG_INT_BASE10
SpecificationRule_DATA_REPR_NNEG_INT_EURO_NUM = _specificationrule.SpecificationRule_DATA_REPR_NNEG_INT_EURO_NUM
SpecificationRule_MODEL_ELEMENT = _specificationrule.SpecificationRule_MODEL_ELEMENT
SpecificationRule_MODEL_NAME = _specificationrule.SpecificationRule_MODEL_NAME
SpecificationRule_MODEL_CHILD = _specificationrule.SpecificationRule_MODEL_CHILD
SpecificationRule_MODEL_MORE_THAN_ONE_ENCAPSULATION = _specificationrule.SpecificationRule_MODEL_MORE_THAN_ONE_ENCAPSULATION
SpecificationRule_IMPORT_HREF = _specificationrule.SpecificationRule_IMPORT_HREF
SpecificationRule_IMPORT_CHILD = _specificationrule.SpecificationRule_IMPORT_CHILD
SpecificationRule_IMPORT_CIRCULAR = _specificationrule.SpecificationRule_IMPORT_CIRCULAR
SpecificationRule_IMPORT_UNITS_NAME = _specificationrule.SpecificationRule_IMPORT_UNITS_NAME
SpecificationRule_IMPORT_UNITS_REF = _specificationrule.SpecificationRule_IMPORT_UNITS_REF
SpecificationRule_IMPORT_COMPONENT_NAME = _specificationrule.SpecificationRule_IMPORT_COMPONENT_NAME
SpecificationRule_IMPORT_COMPONENT_REF = _specificationrule.SpecificationRule_IMPORT_COMPONENT_REF
SpecificationRule_UNITS_NAME = _specificationrule.SpecificationRule_UNITS_NAME
SpecificationRule_UNITS_NAME_UNIQUE = _specificationrule.SpecificationRule_UNITS_NAME_UNIQUE
SpecificationRule_UNITS_STANDARD = _specificationrule.SpecificationRule_UNITS_STANDARD
SpecificationRule_UNITS_CHILD = _specificationrule.SpecificationRule_UNITS_CHILD
SpecificationRule_UNIT_UNITS_REF = _specificationrule.SpecificationRule_UNIT_UNITS_REF
SpecificationRule_UNIT_DIGRAPH = _specificationrule.SpecificationRule_UNIT_DIGRAPH
SpecificationRule_UNIT_CIRCULAR_REF = _specificationrule.SpecificationRule_UNIT_CIRCULAR_REF
SpecificationRule_UNIT_OPTIONAL_ATTRIBUTE = _specificationrule.SpecificationRule_UNIT_OPTIONAL_ATTRIBUTE
SpecificationRule_UNIT_PREFIX = _specificationrule.SpecificationRule_UNIT_PREFIX
SpecificationRule_UNIT_MULTIPLIER = _specificationrule.SpecificationRule_UNIT_MULTIPLIER
SpecificationRule_UNIT_EXPONENT = _specificationrule.SpecificationRule_UNIT_EXPONENT
SpecificationRule_COMPONENT_NAME = _specificationrule.SpecificationRule_COMPONENT_NAME
SpecificationRule_COMPONENT_CHILD = _specificationrule.SpecificationRule_COMPONENT_CHILD
SpecificationRule_VARIABLE_NAME = _specificationrule.SpecificationRule_VARIABLE_NAME
SpecificationRule_VARIABLE_UNITS = _specificationrule.SpecificationRule_VARIABLE_UNITS
SpecificationRule_VARIABLE_INTERFACE = _specificationrule.SpecificationRule_VARIABLE_INTERFACE
SpecificationRule_VARIABLE_INITIAL_VALUE = _specificationrule.SpecificationRule_VARIABLE_INITIAL_VALUE
SpecificationRule_RESET_CHILD = _specificationrule.SpecificationRule_RESET_CHILD
SpecificationRule_RESET_ORDER = _specificationrule.SpecificationRule_RESET_ORDER
SpecificationRule_RESET_VARIABLE_REFERENCE = _specificationrule.SpecificationRule_RESET_VARIABLE_REFERENCE
SpecificationRule_WHEN_ORDER = _specificationrule.SpecificationRule_WHEN_ORDER
SpecificationRule_WHEN_CHILD = _specificationrule.SpecificationRule_WHEN_CHILD
SpecificationRule_MATH_MATHML = _specificationrule.SpecificationRule_MATH_MATHML
SpecificationRule_MATH_CHILD = _specificationrule.SpecificationRule_MATH_CHILD
SpecificationRule_MATH_CI_VARIABLE_REFERENCE = _specificationrule.SpecificationRule_MATH_CI_VARIABLE_REFERENCE
SpecificationRule_MATH_CN_UNITS_ATTRIBUTE = _specificationrule.SpecificationRule_MATH_CN_UNITS_ATTRIBUTE
SpecificationRule_ENCAPSULATION_COMPONENT_REF = _specificationrule.SpecificationRule_ENCAPSULATION_COMPONENT_REF
SpecificationRule_COMPONENT_REF_COMPONENT_ATTRIBUTE = _specificationrule.SpecificationRule_COMPONENT_REF_COMPONENT_ATTRIBUTE
SpecificationRule_COMPONENT_REF_CHILD = _specificationrule.SpecificationRule_COMPONENT_REF_CHILD
SpecificationRule_COMPONENT_REF_ENCAPSULATION = _specificationrule.SpecificationRule_COMPONENT_REF_ENCAPSULATION
SpecificationRule_CONNECTION_COMPONENT1 = _specificationrule.SpecificationRule_CONNECTION_COMPONENT1
SpecificationRule_CONNECTION_COMPONENT2 = _specificationrule.SpecificationRule_CONNECTION_COMPONENT2
SpecificationRule_CONNECTION_UNIQUE_TRANSITIVE = _specificationrule.SpecificationRule_CONNECTION_UNIQUE_TRANSITIVE
SpecificationRule_CONNECTION_MAP_VARIABLES = _specificationrule.SpecificationRule_CONNECTION_MAP_VARIABLES
SpecificationRule_MAP_VARIABLES_VARIABLE1 = _specificationrule.SpecificationRule_MAP_VARIABLES_VARIABLE1
SpecificationRule_MAP_VARIABLES_VARIABLE2 = _specificationrule.SpecificationRule_MAP_VARIABLES_VARIABLE2
SpecificationRule_MAP_VARIABLES_UNIQUE = _specificationrule.SpecificationRule_MAP_VARIABLES_UNIQUE


